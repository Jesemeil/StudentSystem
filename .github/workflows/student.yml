name: Student Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 1: Copy docker-compose.yml to EC2
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: 22
          script: |
            # Navigate to the project directory
            cd /path/to/your/docker-compose/directory

            # Copy the latest docker-compose.yml file from GitHub
            scp docker-compose.yml ubuntu@${{ secrets.AWS_EC2_HOST }}:/path/to/docker-compose/directory

            # Pull the latest image from Docker Hub
            docker-compose down
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest

            # Bring up the updated Docker containers
            docker-compose up -d --build




#name: Student Pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '21'
#
#      - name: Build with Maven
#        run: mvn clean package -DskipTests
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      - name: Build and Push Docker Image
#        run: |
#          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest .
#          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Install Docker Compose
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y docker-compose
#
#      - name: Set up Docker Compose
#        run: |
#          docker-compose down
#          docker-compose up -d --build
#



#name: Student Pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '21'
#
#      - name: Build with Maven
#        run: mvn clean package -DskipTests
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      - name: Build and Push Docker Image
#        run: |
#          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest .
#          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Install SSH Key
#        uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.EC2_SSH_KEY }}   # Add your EC2 SSH private key in GitHub secrets
#          known_hosts: ${{ secrets.EC2_KNOWN_HOSTS }}   # Add your EC2 instance's known_hosts
#
#      - name: SSH and Deploy to EC2
#        run: |
#          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
#            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/studentsystem:latest
#            cd /path/to/your/docker-compose.yml   # Make sure the docker-compose.yml is on the EC2 instance
#            docker-compose down
#            docker-compose up -d --build
#          EOF
#
#
